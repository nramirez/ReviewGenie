import Foundation

/// Defines the contract for a service that interacts with the Google Gemini API to generate review drafts.
/// This service takes various inputs such as place information, user ratings, photos, existing reviews,
/// and user notes to create compelling review suggestions.
protocol GeminiServiceProtocol {
    /// Asynchronously generates a specified number of review drafts using the Gemini API.
    ///
    /// This function takes detailed information about a place, user ratings, optional photos,
    /// existing reviews for context, and user notes to construct a prompt for the Gemini API,
    /// which then returns a set of generated review drafts.
    ///
    /// - Parameters:
    ///   - placeName: The official name of the place being reviewed.
    ///   - address: The physical address of the place.
    ///   - overallRating: The user's overall numerical rating for their experience (e.g., on a scale of 0 to 5).
    ///   - foodRating: The user's numerical rating specifically for food, if applicable (e.g., 0-5).
    ///   - serviceRating: The user's numerical rating specifically for service, if applicable (e.g., 0-5).
    ///   - atmosphereRating: The user's numerical rating specifically for the atmosphere or ambiance, if applicable (e.g., 0-5).
    ///   - photoData: An optional array of `Data` objects, where each `Data` instance represents an image.
    ///                These images can be used by multimodal Gemini models to inform the review generation.
    ///                If `nil` or empty, no image data is sent.
    ///   - existingReviews: An optional array of `FetchedReview` objects. These are existing reviews for the
    ///                      place, provided to the LLM to give it context and help generate more relevant
    ///                      or nuanced drafts.
    ///   - userKeyNotes: An optional string containing specific notes, keywords, or sentiments provided by the
    ///                   user about their experience. This allows for more personalized review generation.
    ///   - numberOfDraftsToRequest: The desired number of distinct review drafts to be generated by the API.
    /// - Returns: An array of strings, where each string is a generated review draft. The number of elements
    ///            in the array should ideally correspond to `numberOfDraftsToRequest`.
    /// - Throws: An error if the API request fails, if the response cannot be parsed, or if any other
    ///           issue occurs during the generation process.
    func generateReviewDrafts(
        placeName: String,
        address: String,
        overallRating: Double,
        foodRating: Double,
        serviceRating: Double,
        atmosphereRating: Double,
        photoData: [Data]?,
        existingReviews: [FetchedReview]?,
        userKeyNotes: String?,
        numberOfDraftsToRequest: Int
    ) async throws -> [String]
}